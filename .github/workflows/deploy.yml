name: Rust Actions

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint_api:
    name: Lint
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # fetch all commits to get last updated time or other git log info
          fetch-depth: 0
          submodules: recursive

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Lint
        run: cargo clippy

  lint_adbweb:
    name: Lint
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # fetch all commits to get last updated time or other git log info
          fetch-depth: 0
          submodules: recursive

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy
          
      - name: Lint
        run: cargo clippy --manifest-path adb_web-rs/Cargo.toml

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # fetch all commits to get last updated time or other git log info
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Prepare Jailbreak JSON
        run: node prepare_jailbreak_json.js

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Build API
        run: cargo build --release

      - name: Deploy API
        run: cargo run --release

      - name: Fix API JSON
        run: find ./out -path './*main.json' | xargs node fix_json.js && find ./out -path './*index.json' | xargs node fix_json.js

      - name: Build ADB Web 
        run: cargo build --manifest-path adb-web-rs/Cargo.toml --release

      - name: Deploy ADB Web
        run: cargo run --manifest-path adb-web-rs/Cargo.toml --release

      - name: Fix ADB Web JSON
        run: find ./out/adbweb -path './*main.json' | xargs node fix_json.js && find ./out/adbweb -path './*index.json' | xargs node fix_json.js

      - name: Split all >100MB files into parts
        run: >
          for i in $(find ./out -size +100M -not -path './git/*'); do
            split -d -b 100M -a 1 $i $i
          done

      - name: Remove all >100MB files
        run: find ./out -size +100M -not -path './.git/*' | xargs rm

      - name: Create CNAME and .nojekyll
        run: echo "api.emiyl.com" > ./out/CNAME && touch ./out/.nojekyll

      - name: Deploy to GitHub Pages
        if: (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) || github.event_name == 'workflow_dispatch'
        uses: crazy-max/ghaction-github-pages@v2
        with:
          # deploy to gh-pages branch
          target_branch: gh-pages
          # deploy the default output dir of VuePress
          build_dir: out
        env:
          # @see https://docs.github.com/en/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
